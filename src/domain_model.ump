// Cover all features from feature list
// Show concepts, attributes, relationships
// DO NOT include operations
// DO NOT include validation checks using before/after

namespace ca.mcgill.ecse223.climbsafe.model;

class ClimbSafe {
	// User class associations
	1 <@>- * User users; // all users
	1 <@>- 1 Admin admin; // single admin user attached 
	
	1 <@>- * ClimbingSeason seasons;
	
	1 <@>- * Hotel hotels;
	1 <@>- * PieceOfEquipment equipment;
	1 <@>- * Bundle bundles;
}

class User {
	abstract; // this class should not be instantiated
	
	// umple cannot handle unique immutable attributes
	unique String username; // username must be set uniquely and cannot be changed
	String password;
}

class Admin {
	isA User;
	username = "admin@nmc.nt";
	password = "admin";
}

class SeasonalUser {
	abstract; // this class should not be instantiated
	
	isA User;
	// need to add attributes to users for Members and Guides

	String name;
	String emergencyContact;	
}

class Member {
	isA SeasonalUser;
	
	// initialize preferences for a reservation before the admin finalizes details
	Integer noWeeks; // number of weeks the member wants to climb for
	Boolean hiredGuide; // if the member wants to hire a guide
	Boolean hotelStay; // if the member wants to stay at a hotel before and after the climb	
}

class Guide {
	isA SeasonalUser;
}

class ClimbingSeason {
	Date start; // beginning week of climbing period
	Date end; // end week of climbing period
	
	Integer guideCost; // constant for all guides
	
	1 season <@>- * Member members; // to access all users
	1 season <@>- * Guide guides; // to access all guides
	1 season <@>- * Assignment assignments; // all assignments that the admin makes
}

class Hotel {
	String name;
	String address;
	Integer rating;
}

class PieceOfEquipment {
	String name;
	Integer weight;
	Integer price;
}

class Bundle {
	String name;
	Double discountPercentage;
	
	* -> 2..* PieceOfEquipment inclusions; // must contain at least 2 pieces of equipment
}

// admin will create this class to finalize details
class Assignment {
	Integer startWeek; // beginning of climb
	Integer endWeek; // end of climb;
	
	0..1 assignment -- 1 Member member; // this assignment is not instantiated immediately when a user signs up
	* assignments -- 0..1 Guide guide; // assignment may not require a guide
	* assignments -- 0..1 Hotel hotel; // assignment may not require a hotel
	* -> * Bundle bundles;
	* -> * PieceOfEquipment equipment;
}